(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7177],{19324:()=>{},66513:(e,t,n)=>{Promise.resolve().then(n.t.bind(n,19324,23)),Promise.resolve().then(n.bind(n,70832)),Promise.resolve().then(n.bind(n,99199)),Promise.resolve().then(n.bind(n,99304)),Promise.resolve().then(n.bind(n,26259)),Promise.resolve().then(n.bind(n,96063)),Promise.resolve().then(n.bind(n,58930)),Promise.resolve().then(n.t.bind(n,69243,23)),Promise.resolve().then(n.t.bind(n,65299,23)),Promise.resolve().then(n.t.bind(n,34563,23))},70832:(e,t,n)=>{"use strict";n.d(t,{Providers:()=>H});var a=n(95155),r=n(34540),i=n(51990);let o=(0,i.Z0)({name:"user",initialState:{isConnected:!1,address:null,chainId:null,isLoading:!1,error:null},reducers:{setWalletConnection:(e,t)=>{e.isConnected=!0,e.address=t.payload.address,e.chainId=t.payload.chainId,e.error=null},disconnectWallet:e=>{e.isConnected=!1,e.address=null,e.chainId=null},setLoading:(e,t)=>{e.isLoading=t.payload},setError:(e,t)=>{e.error=t.payload}}}),{setWalletConnection:s,disconnectWallet:l,setLoading:d,setError:u}=o.actions,p=o.reducer,y=(0,i.Z0)({name:"protocol",initialState:{tvlOverTime:[],metrics:null,loading:!1,error:null},reducers:{setProtocolMetrics:(e,t)=>{e.metrics=t.payload,e.loading=!1,e.error=null},setTvlOverTime:(e,t)=>{e.tvlOverTime=t.payload},setLoading:(e,t)=>{e.loading=t.payload},setError:(e,t)=>{e.error=t.payload,e.loading=!1}}}),{setProtocolMetrics:c,setLoading:m,setError:b,setTvlOverTime:T}=y.actions,g=y.reducer,f=(0,i.Z0)({name:"staking",initialState:{allStakes:[]},reducers:{setAllStakes:(e,t)=>{e.allStakes=t.payload}}}),{setAllStakes:k}=f.actions,S=f.reducer,v=(0,i.Z0)({name:"bonding",initialState:{offerings:[]},reducers:{setOfferings:(e,t)=>{e.offerings=t.payload}}}),{setOfferings:P}=v.actions,w=v.reducer;var A=n(38227),I=n(36241),D=n(81100);let h=JSON.parse('[{"inputs":[{"internalType":"address","name":"_staking","type":"address"},{"internalType":"address","name":"_bondDepository","type":"address"},{"internalType":"address","name":"_treasury","type":"address"},{"internalType":"address","name":"_dreToken","type":"address"},{"internalType":"address","name":"_stakingToken","type":"address"},{"internalType":"address","name":"_rebaseController","type":"address"},{"internalType":"address","name":"_dreOracle","type":"address"},{"internalType":"address","name":"_shadowLP","type":"address"},{"internalType":"address","name":"_bootstrapLP","type":"address"},{"internalType":"address","name":"_odos","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"positionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"inputs":[],"name":"bondDepository","outputs":[{"internalType":"contract IDreBondDepository","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bootstrapLP","outputs":[{"internalType":"contract IBootstrapLP","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"calculateAPR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"totalStaked","type":"uint256"}],"name":"calculateAPRRaw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"claimAllRewards","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"dreOracle","outputs":[{"internalType":"contract IDreOracle","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dreToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"startingIndex","type":"uint256"},{"internalType":"uint256","name":"endingIndex","type":"uint256"}],"name":"getAllStakingPositions","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"declaredValue","type":"uint256"},{"internalType":"uint256","name":"rewards","type":"uint256"},{"internalType":"uint256","name":"cooldownEnd","type":"uint256"},{"internalType":"uint256","name":"rewardsUnlockAt","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct DreUIHelper.StakingPositionInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"bondIds","type":"uint256[]"}],"name":"getBondVariables","outputs":[{"components":[{"internalType":"bool","name":"enabled","type":"bool"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"contract IERC20","name":"quoteToken","type":"address"},{"internalType":"uint256","name":"totalDebt","type":"uint256"},{"internalType":"uint256","name":"maxPayout","type":"uint256"},{"internalType":"uint256","name":"sold","type":"uint256"},{"internalType":"uint256","name":"purchased","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"initialPrice","type":"uint256"},{"internalType":"uint256","name":"finalPrice","type":"uint256"}],"internalType":"struct IDreBondDepository.Bond[]","name":"bonds","type":"tuple[]"},{"internalType":"uint256[]","name":"currentPrices","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address[]","name":"bondTokens","type":"address[]"}],"name":"getProtocolInfo","outputs":[{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"totalStaked","type":"uint256"},{"internalType":"uint256","name":"totalRewards","type":"uint256"},{"internalType":"uint256","name":"currentAPR","type":"uint256"},{"internalType":"uint256","name":"currentSpotPrice","type":"uint256"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"treasuryBalance","type":"uint256"},{"internalType":"uint256","name":"treasuryValueDre","type":"uint256"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"uint256","name":"oraclePrice","type":"uint256"},{"internalType":"uint256","name":"oraclePriceInDre","type":"uint256"}],"internalType":"struct DreUIHelper.TokenInfo[]","name":"tokenInfos","type":"tuple[]"},{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"declaredValue","type":"uint256"},{"internalType":"uint256","name":"rewards","type":"uint256"},{"internalType":"uint256","name":"cooldownEnd","type":"uint256"},{"internalType":"uint256","name":"rewardsUnlockAt","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct DreUIHelper.StakingPositionInfo[]","name":"stakingPositions","type":"tuple[]"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"bondId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"quoteAmount","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"lastClaimTime","type":"uint256"},{"internalType":"uint256","name":"claimedAmount","type":"uint256"},{"internalType":"uint256","name":"claimableAmount","type":"uint256"},{"internalType":"bool","name":"isStaked","type":"bool"}],"internalType":"struct DreUIHelper.BondPositionInfo[]","name":"bondPositions","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"odos","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebaseController","outputs":[{"internalType":"contract IRebaseController","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"shadowLP","outputs":[{"internalType":"contract IOracle","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"staking","outputs":[{"internalType":"contract IDreStaking","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"contract IDreTreasury","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenAmountIn","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"bytes","name":"odosData","type":"bytes"}],"name":"zapAndMint","outputs":[{"internalType":"uint256","name":"dreAmountOfLp","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenAmountIn","type":"uint256"},{"internalType":"uint256","name":"dreAmountDeclared","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"bytes","name":"odosData","type":"bytes"}],"name":"zapAndStake","outputs":[{"internalType":"uint256","name":"dreAmountSwapped","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenAmountIn","type":"uint256"},{"internalType":"uint256","name":"dreAmountDeclaredAsPercentage","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"bytes","name":"odosData","type":"bytes"}],"name":"zapAndStakeAsPercentage","outputs":[{"internalType":"uint256","name":"dreAmountSwapped","type":"uint256"}],"stateMutability":"payable","type":"function"}]'),C={treasury:"0xc589858dA047A4789e099FA2CfD1D974D14F344B",stakingContract:"0x21Cfa934CEa191fBD874ee8B1B6CE2B2224De653",dreBondDepository:"0x825A2bC06A56E556138513495b3332933c371980",dreOracle:"0xF8407e86a2883a6C68a1d9e2EE16AAA4b7c0d123",uiHelper:"0x1A1C71A8c9571590cD9Ad51A6d591E463386C959",bootstrapLP:"0x52Ab05c85Ae079a75b4F4a726A9cFF5f9628F6fd"},E={tokens:{USDC:{address:"0x29219dd400f2Bf60E5a23d13Be72B486D4038894",decimals:6,symbol:"USDC"},scUSD:{address:"0xd3DCe716f3eF535C5Ff8d041c1A41C3bd89b97aE",decimals:6,symbol:"scUSD"},DRE:{address:"0xd4eee4c318794bA6FFA7816A850a166FFf8310a9",decimals:18,symbol:"DRE"},DRE_USDC_LP:{address:"0x18b6963ebe82b87c338032649aaad4eec43d3ecb",decimals:18},DRE_scUSD_LP:{address:"0x88640D840614BB63cfb1545897D6d228B381C659",decimals:18}},coreAddresses:C,bondIds:[0,1],approvalContracts:[C.treasury,C.stakingContract,C.dreBondDepository]};async function R(e){let t=(0,A.l)({chain:D.T,transport:(0,I.L)()});console.log("userAddress",e);let n=await t.readContract({address:E.coreAddresses.uiHelper,abi:h,functionName:"getProtocolInfo",args:[e,Object.values(E.tokens).map(e=>e.address)]});console.log("result",n);let[a,r,i,o,s,l,d,u,p]=n;return{tvl:a,totalSupply:r,totalStaked:i,totalRewards:o,currentAPR:s,currentSpotPrice:l,tokenInfos:d,stakingPositions:u,bondPositions:p}}var x=n(1405);let B=(e,t)=>{switch(e.toLowerCase()){case"0x18b6963ebe82b87c338032649aaad4eec43d3ecb":return"DRE/USDC LP";case"0x88640d840614bb63cfb1545897d6d228b381c659":return"DRE/scUSD LP";default:return t}},L=(e,t)=>{switch(e.toLowerCase()){case"0x18b6963ebe82b87c338032649aaad4eec43d3ecb":return"DRE-USDC-LP";case"0x88640d840614bb63cfb1545897d6d228b381c659":return"DRE-scUSD-LP";default:return t}},F=(0,i.zD)("balances/fetchProtocolInfo",async e=>{console.log("fetchProtocolInfoThunk",e);let t=await R(e);return{...t,tvl:t.tvl.toString(),totalSupply:t.totalSupply.toString(),totalStaked:t.totalStaked.toString(),totalRewards:t.totalRewards.toString(),currentSpotPrice:t.currentSpotPrice.toString(),currentAPR:Number((0,x.J)(BigInt(t.currentAPR),16)).toFixed(2),tokenInfos:t.tokenInfos.map(e=>({...e,symbol:L(e.token,e.symbol),token:B(e.token,e.token),decimals:Number(e.decimals),oraclePrice:e.oraclePrice.toString(),oraclePriceInDre:e.oraclePriceInDre.toString(),treasuryValueDre:e.treasuryValueDre.toString(),treasuryBalance:e.treasuryBalance.toString(),balance:e.balance.toString(),allowance:e.allowance.toString()})),stakingPositions:t.stakingPositions.map(e=>({...e,id:e.id.toString(),amount:e.amount.toString(),rewards:e.rewards.toString(),cooldownEnd:e.cooldownEnd.toString(),declaredValue:e.declaredValue.toString(),rewardsUnlockAt:e.rewardsUnlockAt.toString()})),bondPositions:t.bondPositions.map(e=>({id:e.id.toString(),bondId:e.bondId.toString(),amount:e.amount.toString(),quoteAmount:e.quoteAmount.toString(),startTime:e.startTime.toString(),lastClaimTime:e.lastClaimTime.toString(),claimedAmount:e.claimedAmount.toString(),claimableAmount:e.claimableAmount.toString(),isStaked:e.isStaked}))}}),M=(0,i.Z0)({name:"balances",initialState:{tvl:"0",totalSupply:"0",totalStaked:"0",totalRewards:"0",currentAPR:"0",bondTokens:[],tokenInfos:[],stakingPositions:[],bondPositions:[],loading:!1,error:null,lastUpdated:null},reducers:{},extraReducers:e=>{e.addCase(F.pending,e=>{e.loading=!0,e.error=null}).addCase(F.fulfilled,(e,t)=>{e.loading=!1,e.error=null,e.lastUpdated=Date.now(),e.tvl=t.payload.tvl,e.totalSupply=t.payload.totalSupply,e.totalStaked=t.payload.totalStaked,e.totalRewards=t.payload.totalRewards,e.currentAPR=t.payload.currentAPR,e.tokenInfos=t.payload.tokenInfos,e.stakingPositions=t.payload.stakingPositions,e.bondPositions=t.payload.bondPositions}).addCase(F.rejected,(e,t)=>{e.loading=!1,e.error=t.error.message||"Failed to fetch protocol info"})}}).reducer,U=(0,i.U1)({reducer:{user:p,protocol:g,staking:S,bonding:w,balances:M}});var N=n(12115);let _=()=>({...(0,r.d4)(e=>e.protocol)}),O=e=>{let{children:t}=e,n=(0,r.wA)(),{lastUpdated:i}=(0,r.d4)(e=>e.balances),{fetchProtocolData:o}=function(){let{tvl:e,totalSupply:t,totalStaked:n,totalRewards:a,currentAPR:i,bondTokens:o,tokenInfos:s,stakingPositions:l,bondPositions:d,loading:u,error:p,lastUpdated:y}=(0,r.d4)(e=>e.balances),{tvlOverTime:c}=_(),m=(0,N.useCallback)(()=>{var a;let r=Object.entries(E.tokens).map(t=>{let[n,a]=t,r=s.find(e=>e.token===a.address),i=(null==r?void 0:r.balance)||0n,o=Number((0,x.J)(BigInt(i),a.decimals));return{symbol:n,amount:o.toString(),value:o.toString(),percentage:o/Number((0,x.J)(BigInt(e),18))*100}}).filter(e=>Number(e.value)>0).sort((e,t)=>Number(t.value)-Number(e.value)),o=null===(a=s.find(e=>e.token===E.tokens.DRE.address))||void 0===a?void 0:a.treasuryBalance,l=Number((0,x.J)(BigInt(o||"0"),18)),d=Number((0,x.J)(BigInt(t),18)),u=Number((0,x.J)(BigInt(e),18))+l;return{tokenPrice:1,marketCap:d,treasuryValue:u,lastUpdate:y||Date.now(),totalStaked:Number((0,x.J)(BigInt(n),18)),circulatingSupply:d,fullyDilutedMarketCap:d,currentAPY:Number(i),dailyROI:0,riskFreeValue:0,backingPrice:u/d,treasuryAssets:r,marketCapChange:0,apyChange:0,priceChange:0,treasuryChange:0}},[s,e,t,n,i,y]);return{tvlOverTime:c,tvl:e,totalSupply:t,totalStaked:n,totalRewards:a,currentAPR:i,bondTokens:o,tokenInfos:s,stakingPositions:l,bondPositions:d,loading:u,error:p,lastUpdated:y,fetchProtocolData:m}}();return(0,N.useEffect)(()=>{let e=async()=>{try{let e=await o();console.log("data",e),n(c(e))}catch(e){console.error("Error fetching protocol data:",e)}};i&&e()},[n,o,i]),(0,a.jsx)(a.Fragment,{children:t})};var j=n(2145);async function V(){try{let e=await fetch("https://api.llama.fi/hourly/dre-finance");if(!e.ok)throw Error("Failed to fetch TVL data");return await e.json()}catch(e){throw console.error("Error fetching TVL data:",e),e}}let q=()=>{let e=(0,r.wA)(),{address:t,isConnected:n}=(0,j.F)(),a=(0,N.useRef)(void 0),{metrics:i}=(0,r.d4)(e=>e.protocol),o=async()=>{try{let t=await V(),n=function(e){return e.tvl&&0!==e.tvl.length?e.tvl.map(e=>({date:e.date,tvl:e.totalLiquidityUSD})):[]}(t);e(T(n)),console.log("tvl",i,n)}catch(e){console.error(e)}},s=(0,N.useCallback)(()=>{t?e(F(t)):e(F("0x0000000000000000000000000000000000000001"))},[t,e]);return(0,N.useEffect)(()=>(console.log("useEffect"),s(),o(),a.current=setInterval(s,5e3),()=>{a.current&&clearInterval(a.current)}),[]),(0,N.useEffect)(()=>{n&&t?(a.current&&clearInterval(a.current),s(),a.current=setInterval(s,5e3)):a.current&&clearInterval(a.current)},[n,t,s]),{refreshProtocolData:s}};function J(e){let{children:t}=e;return q(),(0,a.jsx)(a.Fragment,{children:t})}function H(e){let{children:t}=e;return(0,a.jsx)(r.Kq,{store:U,children:(0,a.jsx)(O,{children:(0,a.jsx)(J,{children:t})})})}},99199:(e,t,n)=>{"use strict";n.d(t,{Web3Provider:()=>k});var a=n(95155);n(85035);var r=n(83415),i=n(87017),o=n(26715),s=n(63439),l=n(56774),d=n(85658),u=n(36241),p=n(81100),y=n(74113),c=n(29385),m=n(34324),b=n(51424);let T=(0,s.Qq)([{groupName:"Recommended",wallets:[y.G,c.Z,m.d,b.O]}],{appName:"Dre Finance",projectId:"c385954abce0db2b929248968af25c16"}),g=(0,d.Z)({chains:[p.T],connectors:T,transports:{[p.T.id]:(0,u.L)("https://rpc.soniclabs.com")}}),f=new i.E;function k(e){let{children:t}=e;return(0,a.jsx)(r.x,{config:g,children:(0,a.jsx)(o.Ht,{client:f,children:(0,a.jsx)(s.qL,{theme:(0,l.a)({accentColor:"rgb(150, 90, 8)",accentColorForeground:"white"}),children:t})})})}},99304:(e,t,n)=>{"use strict";n.d(t,{ThemeProvider:()=>i});var a=n(95155);n(12115);var r=n(51362);function i(e){let{children:t,...n}=e;return(0,a.jsx)(r.N,{...n,children:t})}}},e=>{var t=t=>e(e.s=t);e.O(0,[2533,3012,8451,2665,8441,1684,7358],()=>t(66513)),_N_E=e.O()}]);